name: coffeegis
services:

  # geoprocessor-grpc
  grpc-geoprocessor:
    image: smbrine/coffeegis-geoprocessor-grpc:v1
    pull_policy: always
    container_name: geoprocessor-grpc
    restart: always
    depends_on:
      - migration-geoprocessor
      - redis
      - elasticsearch-geoprocessor
    environment:
      POSTGRES_URL: "postgresql+asyncpg://${POSTGRES_USER}:${COFFEEGIS_DB_PASSWORD}@postgres:5432/geoprocessor"
      REDIS_URL: "redis://redis:6379/0"

  migration-geoprocessor:
    image: smbrine/coffeegis-geoprocessor-grpc:v1
    pull_policy: always
    container_name: migration-geoprocessor
    restart: on-failure
    depends_on:
      - postgres
    command: poetry run alembic upgrade head
    environment:
      POSTGRES_URL: "postgresql+asyncpg://${POSTGRES_USER}:${COFFEEGIS_DB_PASSWORD}@postgres:5432/geoprocessor"
      REDIS_URL: "redis://redis:6379/0"

  elasticsearch-geoprocessor:
    image: elasticsearch:8.12.2
    container_name: elasticsearch-geoprocessor
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms2g -Xmx2g

  admin-geoprocessor:
    image: smbrine/coffeegis-geoprocessor-admin:v1
    pull_policy: always
    container_name: admin-geoprocessor
    restart: always
    depends_on:
      - migration-geoprocessor
    environment:
      POSTGRES_URL: "postgresql+asyncpg://${POSTGRES_USER}:${COFFEEGIS_DB_PASSWORD}@postgres:5432/geoprocessor"
    ports:
      - '9991:9094'

  # telegram-bot
  telegram-bot:
    image: smbrine/coffeegis-telegram-bot:v1
    pull_policy: always
    container_name: telegram-bot
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8808/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - migration-telegram
      - redis
    environment:
      TG_BOT_KEY: "${TG_BOT_KEY}"
      DEBUG: "false"
      PUBLIC_ADDR: "${WEBHOOK_ADDR}"
      BIND_PORT: 8808
      BIND_HOST: "0.0.0.0"
      POSTGRES_URL: "postgresql+asyncpg://${POSTGRES_USER}:${COFFEEGIS_DB_PASSWORD}@postgres:5432/telegram"
      ADMIN_CHAT_ID: "-1001996373624"
      REDIS_URL: "redis://redis:6379/1"
    ports:
      - '9990:8808'

  migration-telegram:
    image: smbrine/coffeegis-telegram-bot:v1
    pull_policy: always
    container_name: migration-telegram
    restart: on-failure
    command: alembic upgrade head
    depends_on:
      - postgres
    environment:
      POSTGRES_URL: "postgresql+asyncpg://${POSTGRES_USER}:${COFFEEGIS_DB_PASSWORD}@postgres:5432/telegram"
      TG_BOT_KEY: "${TG_BOT_KEY}"
      DEBUG: "false"
      PUBLIC_ADDR: "${WEBHOOK_ADDR}"
      BIND_PORT: 8808
      BIND_HOST: "0.0.0.0"
      ADMIN_CHAT_ID: "-1001996373624"
      REDIS_URL: "redis://redis:6379/1"

  # images-cdn
  images-cdn:
    image: smbrine/coffeegis-images-cdn:v2
    pull_policy: always
    container_name: images-cdn
    # volumes:
      #  - "${PV_LOC}/cdn/images:/app/uploaded_images"
    environment:
      POSTGRES_URL: "postgresql+asyncpg://${POSTGRES_USER}:${COFFEEGIS_DB_PASSWORD}@postgres:5432/cdn"
      DEBUG: "True"
      LISTEN_ADDR: "0.0.0.0"
      LISTEN_PORT: 8080

  # unified
  redis:
    image: redis:7.2.4
    container_name: redis-coffeegis
    environment:
      REDIS_PORT: 6379
      REDIS_DATABASES: 16
      REDIS_REPLICATION_MODE: master
    volumes:
      - "${PV_LOC}/unified/redis/data:/data"
    restart: always

  postgres:
    image: postgres:16.2-bullseye
    container_name: postgres-coffeegis
    restart: always
    environment:
      POSTGRES_PASSWORD: "${COFFEEGIS_DB_PASSWORD}"
      POSTGRES_USER: "${POSTGRES_USER}"
      PGDATA: /data/pgdata
    volumes:
      - "${PV_LOC}/unified/postgres/postgres-data:/data/pgdata"
      - "${PV_LOC}/unified/postgres/bckp:/mnt/bckp"
      - "./init.sql:/docker-entrypoint-initdb.d"

  # utilities
  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_DEFAULT_EMAIL}"
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_DEFAULT_PASSWORD}"
    volumes:
      - ${PV_LOC}/pgadmin:/data
    ports:
      - "9992:80"
  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: always
    depends_on:
      - redis
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - "9993:8081"